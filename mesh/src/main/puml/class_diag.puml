@startuml

hide empty members
skinparam linetype polyline

title "Mesh ADT Format"

class Mesh {
    + this()
    + this(polygons: Polygons, segments: Segments, vertices: Vertices)
    + this(mesh: Structs.Mesh)
    ---
    + getVertices(): List<Vertex>
    + getNonCentroidVertices(): List<Vertex>
    + getCentroidVertices(): List<Vertex>
    + getSegments(): List<Segment>
    + getPolygons(): List<Polygon>
    + addVertex(vertex: Vertex)
    + addAllVertices(vertices: List<? extends Vertex>)
    + addSegment(segment: Segment)
    + addAllSegments(segments: List<? extends Segment>)
    + addPolygon(polygon: Polygon)
    + addAllPolygons(polygons: List<? extends Polygon>)
    + getConverted(): Structs.Mesh
}

class Polygon {
    - index: int
    ---
    + this(segments: List<? extends Segment>)
    + this(polygon: Structs.Polygon, segments: List<? extends Segment>, centroid: Vertex)
    + this(polygon: Structs.Polygon, segments: List<? extends Structs.Segment>, vertices: List<? extends Vertex>, centroid: Structs.Vertex)
    ---
    + getVertices(): List<? extends Vertex>
    + getSegments(): List<? extends Segment>
    + getCentroid(): Vertex
    + calculateCentroid()
    + getNeighbors(): List<? extends Polygon>
    + addNeighbor(polygon: Polygon)
    + addNeighbors(polygons: List<? extends Polygon>)
    + isNeighbor(polygon: Polygon)
    + setColor(color: java.awt.Color)
    + getColor(): java.awt.Color
    + getConverted(): Structs.Polygon
    + addProperty(property: Property)
    + addAllProperties(properties: Iterable<? extends Property>)
    + getProperty(key: String): Property
    + getProperties(): List<? extends Property>
    + setIndex(index: int)
    + getIndex(): int
    + render(canvas: java.awt.Graphics2D)
    + draw(canvas: java.awt.Graphics2D)
    + copy(polygon: Polygon))
}

class Segment {
    - wasRendered: boolean
    - index: int
    ---
    + this(v1: Vertex, v2: Vertex)
    + this(segment: Structs.Segment, v1: Structs.Vertex, v2: Structs.Vertex)
    + this(segment: Structs.Segment, v1: Vertex, v2: Vertex)
    ---
    + getV1(): Vertex
    + getV2(): Vertex
    + shareVertex(segment: Segment) : boolean
    + setColor(color: java.awt.Color)
    + getColor(): java.awt.Color
    + getConverted(): Structs.Segment
    + addProperty(property: Property)
    + addAllProperties(properties: Iterable<? extends Property>)
    + getProperty(key: String): Property
    + getProperties(): List<? extends Property>
    + setIndex(index: int)
    + getIndex(): int
    + render(canvas: java.awt.Graphics2D)
    + draw(canvas: java.awt.Graphics2D)
    + copy(segment: Segment)
}

class Vertex {
    - x: double
    - y: double
    - wasRendered: boolean
    - index: int
    ---
    + this(x: double, y: double)
    + this(vertex: Structs.Vertex)
    ---
    + getX(): double
    + setX(x: double)
    + getY(): double
    + setY(y: double)
    + isCentroid(): boolean
    + setAsCentroid(isCentroid: boolean)
    + setColor(color: java.awt.Color)
    + getColor(): java.awt.Color
    + getConverted(): Structs.Vertex
    + addProperty(property: Property)
    + addAllProperties(properties: Iterable<? extends Property>)
    + getProperty(key: String): Property
    + getProperties(): List<? extends Property>
    + setIndex(index: int)
    + getIndex(): int
    + render(canvas: java.awt.Graphics2D)
    + draw(canvas: java.awt.Graphics2D)
    + copy(vertex: Vertex)
}

class Property {
    - key: String
    - value: String
    ---
    # this(key: String, value: String)
    + this(property: Structs.Property)
    ---
    + getKey(): String
    + getValue(): String
    + getConverted(): Structs.Property
}

class CentroidProperty {}
class ColorProperty {}
class ThicknessProperty {}

Vertex *--> "0..n\n{ordered}"  Property
Segment *--> "0..n\n{ordered}" Property
Polygon *--> "0..n\n{ordered}" Property

Mesh *--> "0..n\n{ordered}" Polygon
Mesh *--> "0..n\n{ordered}" Segment
Mesh *--> "0..n\n{ordered}" Vertex

Polygon *--> "1" Vertex
Polygon *--> "3..n\n{ordered}" Segment
Polygon *--> "0..n\n{ordered}" Polygon

Segment *--> "2" Vertex

CentroidProperty -[dashed]-> Property
ColorProperty -[dashed]-> Property
ThicknessProperty -[dashed]-> Property

@enduml